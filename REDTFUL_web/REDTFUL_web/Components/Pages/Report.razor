@page "/reports/{id:guid}"
@using RESTFull.Service.dto
@inject HttpClient httpClient
<h3>Report</h3>


<ul>
    <div class="form-group">
        <label for="Title">Title:</label>
        <p class="form-control">@report?.title</p>
    </div>
    <div class="form-group">
        <label for="Annotation">Annotation:</label>
        <p class="form-control">@report?.annotation</p>
    </div>
    <div class="form-group">
        <label for="PresentationTime">PresentationTime:</label>
        <p class="form-control">@report?.presentationTime</p>
    </div>

    <div class="form-group">
        <label for="Section">Section:</label>
        <a href="/sections/@report?.section.Id" class="form-control">&emsp;@report?.section.title</a>
    </div>

    <h3>Authors:</h3>
    <div class="form-group">
        @if (report != null && report?.authors != null && report.authors.Count > 0)
        {
            @foreach (var author in report.authors)
            {
                <a href="/participants/@author.id" class="form-control">&emsp;@author.name</a>
                <br />
            }
        }
    </div>

    <a href="/reports/@id/e">Edit</a>

</ul>



@code {
    [Parameter]
    public Guid id { get; set; }
    private ReportPublicDto report;


    async Task GetAll()
    {
        Console.WriteLine(id);
        var response = await httpClient.GetFromJsonAsync<ReportPublicDto>("/reports/" + id);
        
        Console.Write(response.ToString());
        report = response;
    }

    protected override async Task OnInitializedAsync()
    {
        await GetAll();
    }

}